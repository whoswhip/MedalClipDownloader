name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'mtv-rusted'
        type: string

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Build (Linux)
        run: cargo build --release --target x86_64-unknown-linux-gnu --verbose

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64
          path: target/x86_64-unknown-linux-gnu/release/mtv-rusted

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Build (Windows)
        run: cargo build --release --target x86_64-pc-windows-msvc --verbose

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: windows-x86_64
          path: target/x86_64-pc-windows-msvc/release/mtv-rusted.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin

      - name: Build (macOS)
        run: cargo build --release --target x86_64-apple-darwin --verbose

      - name: Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: macos-x86_64
          path: target/x86_64-apple-darwin/release/mtv-rusted

  build-musl:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Build (MUSL static binary)
        run: |
          docker run --rm -v "$PWD:/home/rust/src" ekidd/rust-musl-builder cargo build --release

      - name: Upload MUSL binary
        uses: actions/upload-artifact@v4
        with:
          name: linux-musl-x86_64
          path: target/x86_64-unknown-linux-musl/release/mtv-rusted
