name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'mtv-rusted'
        type: string

jobs:
  native:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/mtv-rusted

  musl:
    runs-on: ubuntu-latest
    needs: native
    if: ${{ always() }}  # builds even if native fails
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Build with MUSL in Docker
        run: |
          docker run --rm -u root \
            -v "${{ github.workspace }}:/home/rust/src" \
            ekidd/rust-musl-builder \
            cargo build --release

      - name: Upload MUSL artifact
        run: |
          mkdir -p target/x86_64-unknown-linux-musl/release
          cp target/x86_64-unknown-linux-musl/release/mtv-rusted target/
      - uses: actions/upload-artifact@v4
        with:
          name: x86_64-unknown-linux-musl
          path: target/mtv-rusted
